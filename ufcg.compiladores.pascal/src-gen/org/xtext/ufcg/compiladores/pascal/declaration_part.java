/**
 * generated by Xtext 2.10.0
 */
package org.xtext.ufcg.compiladores.pascal;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>declaration part</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getLabel_decl <em>Label decl</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getConstant_def <em>Constant def</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getType_def <em>Type def</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getVariable_decl <em>Variable decl</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getAbstraction <em>Abstraction</em>}</li>
 * </ul>
 *
 * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part()
 * @model
 * @generated
 */
public interface declaration_part extends EObject
{
  /**
   * Returns the value of the '<em><b>Label decl</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Label decl</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Label decl</em>' containment reference.
   * @see #setLabel_decl(label_declaration_part)
   * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part_Label_decl()
   * @model containment="true"
   * @generated
   */
  label_declaration_part getLabel_decl();

  /**
   * Sets the value of the '{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getLabel_decl <em>Label decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Label decl</em>' containment reference.
   * @see #getLabel_decl()
   * @generated
   */
  void setLabel_decl(label_declaration_part value);

  /**
   * Returns the value of the '<em><b>Constant def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Constant def</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Constant def</em>' containment reference.
   * @see #setConstant_def(constant_definition_part)
   * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part_Constant_def()
   * @model containment="true"
   * @generated
   */
  constant_definition_part getConstant_def();

  /**
   * Sets the value of the '{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getConstant_def <em>Constant def</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Constant def</em>' containment reference.
   * @see #getConstant_def()
   * @generated
   */
  void setConstant_def(constant_definition_part value);

  /**
   * Returns the value of the '<em><b>Type def</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Type def</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Type def</em>' containment reference.
   * @see #setType_def(type_definition_part)
   * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part_Type_def()
   * @model containment="true"
   * @generated
   */
  type_definition_part getType_def();

  /**
   * Sets the value of the '{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getType_def <em>Type def</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Type def</em>' containment reference.
   * @see #getType_def()
   * @generated
   */
  void setType_def(type_definition_part value);

  /**
   * Returns the value of the '<em><b>Variable decl</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Variable decl</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Variable decl</em>' containment reference.
   * @see #setVariable_decl(variable_declaration_part)
   * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part_Variable_decl()
   * @model containment="true"
   * @generated
   */
  variable_declaration_part getVariable_decl();

  /**
   * Sets the value of the '{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getVariable_decl <em>Variable decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Variable decl</em>' containment reference.
   * @see #getVariable_decl()
   * @generated
   */
  void setVariable_decl(variable_declaration_part value);

  /**
   * Returns the value of the '<em><b>Abstraction</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Abstraction</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Abstraction</em>' containment reference.
   * @see #setAbstraction(procedure_and_function_declaration_part)
   * @see org.xtext.ufcg.compiladores.pascal.PascalPackage#getdeclaration_part_Abstraction()
   * @model containment="true"
   * @generated
   */
  procedure_and_function_declaration_part getAbstraction();

  /**
   * Sets the value of the '{@link org.xtext.ufcg.compiladores.pascal.declaration_part#getAbstraction <em>Abstraction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Abstraction</em>' containment reference.
   * @see #getAbstraction()
   * @generated
   */
  void setAbstraction(procedure_and_function_declaration_part value);

} // declaration_part
