/**
 * generated by Xtext 2.10.0
 */
package org.xtext.ufcg.compiladores.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.ufcg.compiladores.pascal.PascalPackage;
import org.xtext.ufcg.compiladores.pascal.constant_definition_part;
import org.xtext.ufcg.compiladores.pascal.declaration_part;
import org.xtext.ufcg.compiladores.pascal.label_declaration_part;
import org.xtext.ufcg.compiladores.pascal.procedure_and_function_declaration_part;
import org.xtext.ufcg.compiladores.pascal.type_definition_part;
import org.xtext.ufcg.compiladores.pascal.variable_declaration_part;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>declaration part</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.impl.declaration_partImpl#getLabel_decl <em>Label decl</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.impl.declaration_partImpl#getConstant_def <em>Constant def</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.impl.declaration_partImpl#getType_def <em>Type def</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.impl.declaration_partImpl#getVariable_decl <em>Variable decl</em>}</li>
 *   <li>{@link org.xtext.ufcg.compiladores.pascal.impl.declaration_partImpl#getAbstraction <em>Abstraction</em>}</li>
 * </ul>
 *
 * @generated
 */
public class declaration_partImpl extends MinimalEObjectImpl.Container implements declaration_part
{
  /**
   * The cached value of the '{@link #getLabel_decl() <em>Label decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabel_decl()
   * @generated
   * @ordered
   */
  protected label_declaration_part label_decl;

  /**
   * The cached value of the '{@link #getConstant_def() <em>Constant def</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstant_def()
   * @generated
   * @ordered
   */
  protected constant_definition_part constant_def;

  /**
   * The cached value of the '{@link #getType_def() <em>Type def</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType_def()
   * @generated
   * @ordered
   */
  protected type_definition_part type_def;

  /**
   * The cached value of the '{@link #getVariable_decl() <em>Variable decl</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable_decl()
   * @generated
   * @ordered
   */
  protected variable_declaration_part variable_decl;

  /**
   * The cached value of the '{@link #getAbstraction() <em>Abstraction</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAbstraction()
   * @generated
   * @ordered
   */
  protected procedure_and_function_declaration_part abstraction;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected declaration_partImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.DECLARATION_PART;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public label_declaration_part getLabel_decl()
  {
    return label_decl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabel_decl(label_declaration_part newLabel_decl, NotificationChain msgs)
  {
    label_declaration_part oldLabel_decl = label_decl;
    label_decl = newLabel_decl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__LABEL_DECL, oldLabel_decl, newLabel_decl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLabel_decl(label_declaration_part newLabel_decl)
  {
    if (newLabel_decl != label_decl)
    {
      NotificationChain msgs = null;
      if (label_decl != null)
        msgs = ((InternalEObject)label_decl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__LABEL_DECL, null, msgs);
      if (newLabel_decl != null)
        msgs = ((InternalEObject)newLabel_decl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__LABEL_DECL, null, msgs);
      msgs = basicSetLabel_decl(newLabel_decl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__LABEL_DECL, newLabel_decl, newLabel_decl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constant_definition_part getConstant_def()
  {
    return constant_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstant_def(constant_definition_part newConstant_def, NotificationChain msgs)
  {
    constant_definition_part oldConstant_def = constant_def;
    constant_def = newConstant_def;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__CONSTANT_DEF, oldConstant_def, newConstant_def);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstant_def(constant_definition_part newConstant_def)
  {
    if (newConstant_def != constant_def)
    {
      NotificationChain msgs = null;
      if (constant_def != null)
        msgs = ((InternalEObject)constant_def).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__CONSTANT_DEF, null, msgs);
      if (newConstant_def != null)
        msgs = ((InternalEObject)newConstant_def).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__CONSTANT_DEF, null, msgs);
      msgs = basicSetConstant_def(newConstant_def, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__CONSTANT_DEF, newConstant_def, newConstant_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public type_definition_part getType_def()
  {
    return type_def;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetType_def(type_definition_part newType_def, NotificationChain msgs)
  {
    type_definition_part oldType_def = type_def;
    type_def = newType_def;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__TYPE_DEF, oldType_def, newType_def);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setType_def(type_definition_part newType_def)
  {
    if (newType_def != type_def)
    {
      NotificationChain msgs = null;
      if (type_def != null)
        msgs = ((InternalEObject)type_def).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__TYPE_DEF, null, msgs);
      if (newType_def != null)
        msgs = ((InternalEObject)newType_def).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__TYPE_DEF, null, msgs);
      msgs = basicSetType_def(newType_def, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__TYPE_DEF, newType_def, newType_def));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public variable_declaration_part getVariable_decl()
  {
    return variable_decl;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariable_decl(variable_declaration_part newVariable_decl, NotificationChain msgs)
  {
    variable_declaration_part oldVariable_decl = variable_decl;
    variable_decl = newVariable_decl;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__VARIABLE_DECL, oldVariable_decl, newVariable_decl);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariable_decl(variable_declaration_part newVariable_decl)
  {
    if (newVariable_decl != variable_decl)
    {
      NotificationChain msgs = null;
      if (variable_decl != null)
        msgs = ((InternalEObject)variable_decl).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__VARIABLE_DECL, null, msgs);
      if (newVariable_decl != null)
        msgs = ((InternalEObject)newVariable_decl).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__VARIABLE_DECL, null, msgs);
      msgs = basicSetVariable_decl(newVariable_decl, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__VARIABLE_DECL, newVariable_decl, newVariable_decl));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public procedure_and_function_declaration_part getAbstraction()
  {
    return abstraction;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAbstraction(procedure_and_function_declaration_part newAbstraction, NotificationChain msgs)
  {
    procedure_and_function_declaration_part oldAbstraction = abstraction;
    abstraction = newAbstraction;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__ABSTRACTION, oldAbstraction, newAbstraction);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setAbstraction(procedure_and_function_declaration_part newAbstraction)
  {
    if (newAbstraction != abstraction)
    {
      NotificationChain msgs = null;
      if (abstraction != null)
        msgs = ((InternalEObject)abstraction).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__ABSTRACTION, null, msgs);
      if (newAbstraction != null)
        msgs = ((InternalEObject)newAbstraction).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.DECLARATION_PART__ABSTRACTION, null, msgs);
      msgs = basicSetAbstraction(newAbstraction, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.DECLARATION_PART__ABSTRACTION, newAbstraction, newAbstraction));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.DECLARATION_PART__LABEL_DECL:
        return basicSetLabel_decl(null, msgs);
      case PascalPackage.DECLARATION_PART__CONSTANT_DEF:
        return basicSetConstant_def(null, msgs);
      case PascalPackage.DECLARATION_PART__TYPE_DEF:
        return basicSetType_def(null, msgs);
      case PascalPackage.DECLARATION_PART__VARIABLE_DECL:
        return basicSetVariable_decl(null, msgs);
      case PascalPackage.DECLARATION_PART__ABSTRACTION:
        return basicSetAbstraction(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.DECLARATION_PART__LABEL_DECL:
        return getLabel_decl();
      case PascalPackage.DECLARATION_PART__CONSTANT_DEF:
        return getConstant_def();
      case PascalPackage.DECLARATION_PART__TYPE_DEF:
        return getType_def();
      case PascalPackage.DECLARATION_PART__VARIABLE_DECL:
        return getVariable_decl();
      case PascalPackage.DECLARATION_PART__ABSTRACTION:
        return getAbstraction();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.DECLARATION_PART__LABEL_DECL:
        setLabel_decl((label_declaration_part)newValue);
        return;
      case PascalPackage.DECLARATION_PART__CONSTANT_DEF:
        setConstant_def((constant_definition_part)newValue);
        return;
      case PascalPackage.DECLARATION_PART__TYPE_DEF:
        setType_def((type_definition_part)newValue);
        return;
      case PascalPackage.DECLARATION_PART__VARIABLE_DECL:
        setVariable_decl((variable_declaration_part)newValue);
        return;
      case PascalPackage.DECLARATION_PART__ABSTRACTION:
        setAbstraction((procedure_and_function_declaration_part)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.DECLARATION_PART__LABEL_DECL:
        setLabel_decl((label_declaration_part)null);
        return;
      case PascalPackage.DECLARATION_PART__CONSTANT_DEF:
        setConstant_def((constant_definition_part)null);
        return;
      case PascalPackage.DECLARATION_PART__TYPE_DEF:
        setType_def((type_definition_part)null);
        return;
      case PascalPackage.DECLARATION_PART__VARIABLE_DECL:
        setVariable_decl((variable_declaration_part)null);
        return;
      case PascalPackage.DECLARATION_PART__ABSTRACTION:
        setAbstraction((procedure_and_function_declaration_part)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.DECLARATION_PART__LABEL_DECL:
        return label_decl != null;
      case PascalPackage.DECLARATION_PART__CONSTANT_DEF:
        return constant_def != null;
      case PascalPackage.DECLARATION_PART__TYPE_DEF:
        return type_def != null;
      case PascalPackage.DECLARATION_PART__VARIABLE_DECL:
        return variable_decl != null;
      case PascalPackage.DECLARATION_PART__ABSTRACTION:
        return abstraction != null;
    }
    return super.eIsSet(featureID);
  }

} //declaration_partImpl
